︠26794c9a-e410-4702-ab9a-ac3784542d1ds︠
# 1:
data1 = [Integer(randint(-100 , 100)) for i in range(1000)]
data1
mean(data1).n(digits = 4)
︡cc60f7f2-4ac4-4e61-a072-ab3d71249b0a︡{"stdout":"[11, 13, 41, 91, 64, 46, 68, 52, 59, 10, 52, -44, 42, -73, 83, 41, 34, 5, -66, 6, -98, 75, 19, 49, -9, 9, 83, 24, 17, -79, 65, 17, -11, -94, 12, -67, -62, 21, -52, 34, -38, 36, 65, 11, -52, -76, -86, -47, 50, -69, -29, -44, -68, 99, -85, 26, -27, -2, 2, 50, 85, 61, -38, -72, 73, -32, -87, 65, -51, -48, -49, 83, -6, -10, 56, 48, -85, -39, -57, 59, -19, 96, 10, 73, 51, 81, 35, 43, -81, 22, -81, 81, -98, 52, -27, 96, -33, -39, 80, -64, -81, 62, -100, -95, 43, -75, -100, 47, 42, 26, -15, -21, -81, -63, 67, 87, 27, -9, -28, -85, 74, 11, 23, 6, 88, 94, -44, 41, 89, -20, 58, -21, -53, -1, -92, 52, 22, -69, 0, -50, -90, 71, 26, 89, 91, -48, 77, 44, -35, -11, -10, 21, 53, 15, 96, 82, 80, 92, 48, 87, 78, -87, 94, 45, -100, -65, 37, -99, -33, -45, -93, 49, -84, 55, -88, 89, -93, -51, -13, 18, 16, 21, 27, -14, -12, 75, -92, -43, -73, -60, -30, -75, 33, -21, 43, 51, -85, -100, 39, 61, 67, 4, -47, -9, 11, -39, -21, -98, -18, 77, 72, 53, -10, 74, -9, 18, 41, -36, 11, -75, -46, -94, 40, -67, 86, 23, 78, -44, 20, 4, 25, 96, 54, 79, -52, 53, 100, -84, -3, -25, -27, 91, 18, -7, -77, -2, -77, 59, 93, 55, -42, 37, -60, 49, 23, 16, -77, 7, 28, 29, 84, 31, -10, -6, -99, 46, 71, -47, -92, 100, -23, 59, 73, -15, 61, 72, -49, -29, -50, -71, -58, 8, -50, -27, 94, -12, 64, -29, -58, -68, 99, 57, -91, 90, -23, -9, 43, 32, 35, -63, -50, 10, 74, 13, 73, -32, -69, 40, -4, -76, 53, 46, -33, 35, 66, -22, 35, -45, 23, -70, -96, 43, 61, 81, -21, -52, 42, 96, 79, 91, 7, 36, -69, -74, -54, 66, -2, -59, -30, 72, -53, 1, 59, 20, -97, 98, -28, -92, -18, -12, 20, 84, -29, -84, -30, 15, -10, 34, -58, -97, 24, 50, 68, -82, 61, -88, -67, -75, -91, 52, -46, 29, 78, 10, -92, -67, 35, 86, -63, -83, 20, 61, -30, 28, 73, -86, 73, 8, -43, -45, -1, -97, 82, -41, 57, -30, -69, -60, -16, 74, -66, 44, -80, 13, 73, -49, 6, 52, -17, -72, 9, -16, 64, 50, 88, 80, 92, -77, -25, -6, -59, -12, 21, -67, -17, 25, 63, -38, 94, 66, 44, 15, -18, -22, 35, 65, 70, 10, 92, 88, -65, 84, -18, -30, 62, 53, -2, -98, 74, -46, 90, -55, -18, 23, -12, 92, -84, 74, 10, 30, -35, 7, -92, -60, 37, -42, 53, 16, 18, 40, 61, 16, 15, -73, 40, 15, 57, 64, -25, -7, 24, -3, 34, -38, -49, -54, -4, -89, 13, 81, 87, 87, -66, -18, -79, 87, 63, -59, 71, -55, 72, 13, 74, 4, -44, -93, -59, 47, -61, -10, 3, 12, -57, 23, 21, -34, 32, 0, -88, 25, 49, 13, -67, 96, 8, -31, 83, 31, 74, 62, -89, -3, 90, -31, -36, -70, -73, 77, 55, 77, 35, -18, 68, 10, -24, 90, 51, 63, -3, 71, -15, 3, 24, -72, -77, -61, -39, -35, 19, 30, 1, 3, -97, 75, -1, -60, -21, -86, -69, 72, 1, 96, -38, 72, -57, -98, 92, -5, 38, 89, 18, 38, -48, -71, -61, 7, -74, 42, 83, -11, -36, 85, 47, 2, 81, -94, 39, -79, 77, -21, 31, -14, 56, -5, -77, 33, 42, 7, 74, -78, -65, -12, 16, -71, -25, 33, -11, 47, 43, -52, -92, -80, 59, 91, -1, 31, -35, 91, 96, 62, -83, 85, -85, 31, 22, 22, -44, 63, -37, 48, 51, 45, 96, -90, -6, 38, -1, -27, 29, 77, 66, -1, 0, 67, 89, 9, 89, -34, 18, 73, -16, -77, 76, -86, 99, -73, -41, -46, -6, -87, 37, 25, 42, -64, 15, 19, -9, -62, -66, -67, 96, 38, 79, -64, -37, 93, 5, -86, 55, 1, -32, -99, -79, 64, -76, 24, -36, -52, 91, -80, -41, -4, -10, -65, 97, -51, -33, -49, 74, 18, 70, 9, -36, 89, -97, 15, 17, 89, 12, -42, -35, -93, 17, 74, -73, 27, -16, -99, 10, 74, 8, 15, 2, -77, -48, -45, 3, -71, -67, -71, -40, 32, 83, -50, -22, -49, -53, 71, 9, 93, 46, 71, 87, -16, -94, 49, 93, -44, 32, -8, 48, -21, -3, -91, 47, 56, 62, -16, 6, 60, -44, 65, 31, 88, 31, -61, -29, -15, -75, -46, -3, 89, -73, 53, 90, -54, -96, -27, 20, -69, -64, -70, -41, -22, 10, 97, 14, 29, -87, -75, -57, 27, -25, -17, 29, -79, -24, 29, 55, 31, -60, 63, -5, 18, 74, -18, -97, 38, -83, -1, 28, 68, -33, -47, 10, -93, -2, 42, -6, 86, -65, -23, -89, 46, 36, 18, 13, -45, 75, 70, -69, -24, -15, 87, -56, 13, 36, 36, 20, 44, 52, -27, 74, -82, -72, -7, 14, -45, -83, 8, 92, 12, 89, 38, -87, 72, -4, 54, 53, -70, -21, 13, -84, -24, -93, 8, 92, 40, 33, 43, -10, -34, 31, 39, 97, -88, 100, 30, -39, 84, -28, -35, -46, -28, 49, 69, -59, -43, 69, -27, -66, -40, -44, 86, 29, -99, -3, 60, 70, -70, -32, -20, -86, -53, 56, 20, 50, -75, 17, -77, 41, -55, 88, 20, 18, -85, -32, -87, -69, 94, 86, -74, -19, 26, 59, 99, 87, 27, 97, -53, 85, -1, 73, -8, -1, 92, -61, 60, -9, -39, 39, -1, 58, -56, -28, -82, 65, 15, -45, -52, 56, 66, 2, 8, -82, 55, 5, 55, -11, 57, 43, 87, 35, 94, -96, 72, -27, 41, -50, -93, 31, 7, 11, -14, 85, -93, 4, -31, -54, 69, 41, 18, -59, -21, 26, -47, -66, 100, 66, 17]"}︡{"stdout":"\n"}︡{"stdout":"2.805\n"}︡{"done":true}
︠131c50aa-a4bf-4978-8c82-9f9be4cfb4c8s︠
# 2:
data2 = [71 , 73 , 59 , 65 , 61 , 73 , 61]
data2
mean(data2)
median(data2)
mode(data2)
︡612a9106-be2e-4144-b5fc-034d08fe3b08︡{"stdout":"[71, 73, 59, 65, 61, 73, 61]\n"}︡{"stdout":"463/7\n"}︡{"stdout":"65\n"}︡{"stdout":"[61, 73]\n"}︡{"done":true}
︠df7cd97f-bd8f-431a-b3a1-9ae4aa9c3e3bs︠
# 3:
# No cezgadas
std(data2).n()
variance(data2).n()
# Cezgadas
std(data2 , bias = True).n()
variance(data2 , bias = True).n()
︡4d6812fe-cdd4-4817-a298-6f69906cbcff︡{"stdout":"6.09449400220044\n"}︡{"stdout":"37.1428571428571\n"}︡{"stdout":"5.64240504518043\n"}︡{"stdout":"31.8367346938776\n"}︡{"done":true}
︠7d374d6a-d319-4b45-aeaf-3f75b190c467s︠
# 4: Entiéndase el rango de una muestra como el dato más "grande" de la muestra menos el dato más "pequeño" de la muestra
rango = max(data2) - min(data2)
rango
︡2978cbc5-ae3d-4b05-ac53-748400902654︡{"stdout":"14\n"}︡{"done":true}
︠96b88a73-286f-48d7-988d-f18abd9ac2e4︠









